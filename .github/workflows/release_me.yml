# # This is a basic workflow to help you get started with Actions

# name: my_release

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the master branch
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.


name: my_release

on:
  push:
    branches:
      - feature/fast_macho

jobs:
  publish-me:
    runs-on: ubuntu-latest
    steps:
      - name: Build Python 3.8 wheel
        shell: bash
        env:
          PYTHON_VERSION: 38
        run: |
          docker run --rm \
           -e CCACHE_COMPRESS=1 \
           -e CCACHE_MAXSIZE=10.0G \
           -e CCACHE_CPP2=1 \
           -e CCACHE_DIR=/ccache \
           -e PYTHON_VERSION=$PYTHON_VERSION \
           -e PYTHON_BINARY=/opt/python/cp38-cp38/bin/python3.8 \
           -v $GITHUB_WORKSPACE:/src \
           -v $HOME/.ccache:/ccache \
           liefproject/manylinux2014_x86_64 bash /src/scripts/docker/travis-linux.sh

      - name: 9. 创建GitHub Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{steps.version.outputs.value}}
          release_name: v${{steps.version.outputs.value}}
          body: ${{steps.description.outputs.content}}
          draft: false
          prerelease: false
